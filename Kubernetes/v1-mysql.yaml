apiVersion: v1
kind: PersistentVolume
metadata:
  name: mysql-pv
spec:
  capacity:
    storage: 1Gi
  accessModes:
    - ReadWriteOnce
  hostPath:
    path: "/mnt/data/mysql"
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: mysql-pvc
spec:
  resources:
    requests:
      storage: 1Gi
  accessModes:
    - ReadWriteOnce
---
apiVersion: v1
kind: Service
metadata:
  name: mysql-service
spec:
  selector:
    app: mysql
  ports:
    - protocol: TCP
      port: 3306
      targetPort: 3306
  type: ClusterIP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mysql
spec:
  replicas: 1
  selector:
    matchLabels:
      app: mysql
  template:
    metadata:
      labels:
        app: mysql
    spec:
      containers:
        - name: mysql
          image: mysql:8
          env:
            - name: MYSQL_ROOT_PASSWORD
              value: password123
            - name: MYSQL_DATABASE
              value: tlapp
          ports:
            - containerPort: 3306
          volumeMounts:
            - name: mysql-storage
              mountPath: /var/lib/mysql
            - name: init-scripts
              mountPath: /docker-entrypoint-initdb.d/
      volumes:
        - name: mysql-storage
          persistentVolumeClaim:
            claimName: mysql-pvc
        - name: init-scripts
          configMap:
            name: mysql-init
---
# apiVersion: v1
# kind: ConfigMap
# metadata:
#   name: mysql-init
# data:
#   init.sql: |
#     CREATE TABLE IF NOT EXISTS tasks (
#       id INT AUTO_INCREMENT PRIMARY KEY,
#       title VARCHAR(255) NOT NULL,
#       description TEXT,
#       completed BOOLEAN NOT NULL DEFAULT 0,
#       user_id INT NOT NULL
#     );

#     CREATE TABLE IF NOT EXISTS users (
#       id INT AUTO_INCREMENT PRIMARY KEY,
#       name VARCHAR(255) NOT NULL,
#       email VARCHAR(255) UNIQUE NOT NULL
#     );


